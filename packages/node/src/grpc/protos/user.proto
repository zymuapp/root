syntax = "proto3";

package user;

import "google/protobuf/timestamp.proto";
import "common.proto";

enum Currency {
  EUR = 0;
  USD = 1;
  GBP = 2;
}

enum Language {
  EN = 0;
  DE = 1;
  FR = 2;
  ES = 3;
  IT = 4;
}

enum UserRole {
  USER = 0;
  MODERATOR = 1;
  DEVELOPER = 2;
  ADMIN = 3;
}

enum UserAddressType {
  SHIPPING = 0;
  BILLING = 1;
}

enum TwoFactorMethod {
  SMS = 0;
  EMAIL = 1;
  AUTHENTICATOR = 2;
}

message Location {
  string address = 1;
  string zip_code = 2;
  string city = 3;
  string country = 4;
}

message UserAddress {
  Location location = 1;
  UserAddressType type = 2;
  bool is_default = 3;
}

message UserCredentials {
  int32 version = 1;
  string last_password = 2;
  google.protobuf.Timestamp password_updated_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message EmailNotifications {
  bool newsletter = 1;
  bool messages = 2;
}

message PushNotifications {
  bool message = 1;
}

message NotificationSettings {
  EmailNotifications email = 1;
  PushNotifications push = 2;
}

message TwoFactorAuthentication {
  bool enabled = 1;
  TwoFactorMethod method = 2;
}

message UserSettings {
  Language language = 1;
  Currency currency = 2;
  bool allow_direct_messages = 3;
  bool allow_mentions = 4;
  bool allow_tagging = 5;
  bool allow_tracking = 6;
  NotificationSettings notifications = 7;
  TwoFactorAuthentication two_factor_authentication = 8;
}

message UserConnectionOS {
  string name = 1;
  string version = 2;
}

message UserConnectionDevice {
  string type = 1;
  string brand = 2;
}

message UserConnectionClient {
  string name = 1;
  string version = 2;
}

message UserConnection {
  string ip = 1;
  UserConnectionOS os = 2;
  UserConnectionDevice device = 3;
  UserConnectionClient client = 4;
  google.protobuf.Timestamp updated_at = 5;
  google.protobuf.Timestamp created_at = 6;
}

message EmailVerification {
  bool verified = 1;
  optional google.protobuf.Timestamp verified_at = 2;
}

message PhoneVerification {
  bool verified = 1;
  optional google.protobuf.Timestamp verified_at = 2;
}

message VerificationInfo {
  EmailVerification email = 1;
  PhoneVerification phone_number = 2;
}

message UserMetadata {
  VerificationInfo verification = 1;
}

message User {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  google.protobuf.Timestamp updated_at = 3;
  common.UserIdentifier identifier = 4;
  string password = 5;
  common.UserIdentity identity = 6;
  UserRole role = 7;
  repeated UserAddress addresses = 8;
  UserCredentials credentials = 9;
  UserSettings settings = 10;
  repeated UserConnection connections = 11;
  UserMetadata metadata = 12;
}

message GetUserRequest {
  string id = 1;
}

message GetUserByEmailRequest {
  string email = 1;
}

message CheckUserExistsRequest {
  string identifier = 1;
}

message CreateUserRequest {
  common.UserIdentifier identifier = 1;
  common.UserIdentity identity = 2;
  string password = 3;
}

message UpdateUserData {
  optional common.UserIdentifier identifier = 1;
  optional common.UserIdentity identity = 2;
  optional string password = 3;
}

message UpdateUserRequest {
  string id = 1;
  UpdateUserData data = 2;
}

message DeleteUserRequest {
  string id = 1;
}

message CheckUserExistsResponse {
  bool exists = 1;
  common.UserIdentifier identifier = 2;
  repeated string suggestions = 3;
}

message GetUsersResponse {
  repeated User users = 1;
}

service UserService {
  rpc GetUsers(common.EmptyRequest) returns (GetUsersResponse);
  rpc GetUser(GetUserRequest) returns (User);
  rpc GetUserByEmail(GetUserByEmailRequest) returns (User);
  rpc CheckUserExists(CheckUserExistsRequest) returns (CheckUserExistsResponse);
  rpc CreateUser(CreateUserRequest) returns (User);
  rpc UpdateUser(UpdateUserRequest) returns (common.EmptyResponse);
  rpc DeleteUser(DeleteUserRequest) returns (common.EmptyResponse);
}
